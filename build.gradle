group 'tk.dbcore'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'idea'

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version
    }
}

buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("org.springframework:springloaded:1.2.4.RELEASE")
    }
}

idea { //이 부분은 인텔릭J에서 hot swapping 기능을 이용할 때 사용하는 부분이지만 일단 넣어두도록 하겠습니다.
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    //testCompile 'junit:junit:4.9'
    compile("org.springframework.boot:spring-boot-starter-web")
    //compile("org.thymeleaf:thymeleaf-spring4")
    //compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    //compile("org.springframework:springloaded:1.2.4.RELEASE")
    compile("org.assertj:assertj-core:3.2.0")

}

test {
    systemProperties 'property': 'value'
}

bootRepackage {
    mainClass = 'org.gradle.Application'
}

springBoot {
    backupSource = false
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }

}
